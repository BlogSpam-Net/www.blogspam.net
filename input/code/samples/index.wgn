title: BlogSpam.net :: Code Samples
----

<blockquote>

  <h2>Code Samples</h2>
  <blockquote>
    <p>This page contains a number of small code samples.  These samples demonstrate the process of connecting to our server, using <a href="/api/">our API</a>, and testing a comment.</p>
    <p>These samples do not contain error checking, but may be useful starting points for future development.</p>

    <blockquote>
      <h3>Perl Sample</h3>
      <p>The following sample submits a simple comment to <a href="/api/2.0">the JSON API</a> we present:</p>
      <blockquote>
<pre>
<code>
#!/usr/bin/perl

use strict;
use warnings;

use JSON;
use LWP::Simple;

#
#  The comment we're testing.  We store this in a hash, but submit
# the JSON-encoded version.
#
my %params = ( ip      =&gt; "192.168.1.1",
               site    =&gt; "http://example.com",
               comment =&gt; "You suck"
             );

#
#  Serialize the parameters
#
my $json = encode_json( \%params );

#
#  We're going to use a HTTP POST.
#
my $req = HTTP::Request-&gt;new( 'POST',
                              "http://test.blogspam.net:9999/"  );
$req->header( 'Content-Type' =&gt; 'application/json' );
$req->content( $json );

#
#  Send the request.
#
my $lwp      = LWP::UserAgent->new;
my $response = $lwp-&gt;request( $req );

#
#  Show the result which was received.
#
my $code   = $response-&gt;code;
my $result = $response-&gt;decoded_content;

print "Code: $code - $result\n";

</code>
</pre>
        <p style="text-align:right;">[<a href="/code/samples/perl-sample">Download this sample</a>]</p>
        </blockquote>


        <h3>Python Sample</h3>
        <p>The following sample uses Python to submit a comment for testing, again using the new/recommended <a href="/api/2.0">JSON API</a>:</p>
<blockquote>
<pre><code>
#!/usr/bin/python

# sudo apt-get install python-requests | python3-requests
import requests

import json

params = {'site':   'http://my.blog.example.com/',
          'name': 'Bob SMith',
          'email': 'bob@example.com',
          'comment':  'This is my blog comment'}

headers = {'Content-type': 'application/json',
           'Accept': 'text/plain'}

r = requests.post("http://test.blogspam.net:9999",
                  data=json.dumps(params),
                  headers=headers)

print r.text
</code></pre>
        <p style="text-align:right;">[<a href="/code/samples/python-sample">Download this sample</a>]</p>
        </blockquote>


        <h3>Ruby Sample</h3>
        <p>The following sample uses Ruby to submit a comment for testing.</p>
        <blockquote>
<pre>
<code>
require "net/http"
require "uri"
require 'json'



#
# The comment we're testing
#
message = {
  "ip"      =&gt; "1.2.3.33",
  "site"    =&gt; "http://blog.example.com",
  "name"    =&gt; "Anonymous",
  "comment" =&gt; "This is my comment-body, I like to submit comments"
}

#
#  Build up the request.
#
uri = URI("http://test.blogspam.net:9999/")
req = Net::HTTP::Post.new(uri.path)

#
# Set the body
#
req.body = message.to_json
puts "Sending: #{req.body}"

#
# Make the request.
#
res = Net::HTTP.start(uri.host, uri.port) do |http|
  http.request req
end

#
#  If it succeeded print the response.
#
if ( res.code.to_i == 200 )
  obj = JSON.parse res.body
  if ( obj["result"] =~ /spam/i )
    puts "Rejecting spam Comment: #{obj["reason"]}"
  else
    puts "This comment is OK"
  end
end

</code>
</pre>
        <p style="text-align:right;">[<a href="/code/samples/ruby-sample">Download this sample</a>]</p>
        </blockquote>
</blockquote>
</blockquote>
</blockquote>
